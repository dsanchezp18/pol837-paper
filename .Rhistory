width = 17,
height = 8,
units = "cm",
dpi = 800)
ggsave("ecuador_monthly_mean_temps_fig.jpg",
plot = ecuador_monthly_mean_temps_fig,
width = 17,
height = 8,
units = "cm",
dpi = 800)
ggsave("figures/ecuador_monthly_mean_temps_fig.jpg",
plot = ecuador_monthly_mean_temps_fig,
width = 17,
height = 8,
units = "cm",
dpi = 800)
ecuador_monthly_mean_temps_fig <-
ecuador_monthly_mean_temps %>%
ggplot(aes(x = month_year, y = value, color = temperature_type)) +
geom_line() +
labs(x = "",
y = "Temperature (\u00B0C)",
color = "Type of temperature") +
scale_x_date(date_labels = "%b %Y",
date_breaks = "6 months",
expand = c(0,0),
limits = c(as.Date("2008-01-01"), as.Date("2024-07-01"))) +
scale_y_continuous(breaks = seq(12, 28, by = 1),
labels = comma) +
scale_color_manual(values = c("#E60F2D", "#56589e")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, color = "black"),
text = element_text(color = "black", size = 8),
plot.background = element_rect(fill = "white", colour = NA),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1, linetype = "solid"),
plot.caption = element_text(hjust = 0),
panel.grid.major = element_line(linetype = "dashed", linewidth = 0.3),
panel.grid.minor = element_line(linetype = "dashed", linewidth = 0.3),
strip.background = element_rect(fill = "grey80", colour = "black", linewidth = 1),
legend.position = "bottom"
)
ecuador_monthly_mean_temps_fig
ggsave("figures/ecuador_monthly_mean_temps_fig.jpg",
plot = ecuador_monthly_mean_temps_fig,
width = 17,
height = 8,
units = "cm",
dpi = 800)
ecuador_monthly_mean_temps_fig <-
ecuador_monthly_mean_temps %>%
ggplot(aes(x = month_year, y = value, color = temperature_type)) +
geom_line() +
labs(x = "",
y = "Temperature (\u00B0C)",
color = "Type of temperature") +
scale_x_date(date_labels = "%b %Y",
date_breaks = "6 months",
expand = c(0,0),
limits = c(as.Date("2008-01-01"), as.Date("2024-07-01"))) +
scale_y_continuous(breaks = seq(12, 28, by = 1),
labels = comma) +
scale_color_manual(values = c("#E60F2D", "#56589e")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, color = "black"),
text = element_text(color = "black", size = 8),
plot.background = element_rect(fill = "white", colour = NA),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1, linetype = "solid"),
plot.caption = element_text(hjust = 0),
panel.grid.major = element_line(linetype = "dashed", linewidth = 0.3),
panel.grid.minor = element_line(linetype = "dashed", linewidth = 0.3),
strip.background = element_rect(fill = "grey80", colour = "black", linewidth = 1),
legend.position = "bottom"
)
ecuador_monthly_mean_temps_fig
ggsave("figures/ecuador_monthly_mean_temps_fig.jpg",
plot = ecuador_monthly_mean_temps_fig,
width = 17,
height = 8,
units = "cm",
dpi = 800)
modelsummary(apes_baseline,
output = "data/output/marginal_effects_baseline.md",
coef_map = coefficients_baseline_models,
stars = stars,
booktabs = TRUE,
align = "lrrrr",
escape = T,
estimate = "{estimate}{stars}",
title = "Average marginal effects for baseline models",
threeparttable = TRUE,
notes = notes_baseline_models_ame,
gof_map = gf_map)
# R Script: Tables and Model Plots for the Paper
# POL837 Term Research Paper
# Simon Fraser University
# Daniel Sanchez
# Spring 2024
# This script prepares the tables and model plots for the paper text
# Preliminaries -----------------------------------------------------------
# Load libraries
library(readr)
library(dplyr)
library(ggplot2)
library(fixest)
library(forcats)
library(modelsummary)
library(haven)
library(forcats)
library(kableExtra)
library(marginaleffects)
# Load the full dataset
load("data/full_df.RData")
# Redefine the full dataset
full_df <- df
# The "main" dataset for the analysis is the full dataset without the 2021 observations
df <-
full_df %>%
filter(year != 2021)
# Modelsummary parameters -------------------------------------------------
# Set the modelsummary parameters for the tables
# Values for p-value stars
stars <- c("*" = 0.1,
"**" = 0.05,
"***" = 0.01)
# Goodness of fit mappings for tables (N, AIC, RMSE, FE)
gf_map <- list(
list("raw" = "nobs", "clean" = "N", "fmt" = 0),
list("raw" = "aic", "clean" = "AIC", "fmt" = 0),
list("raw" = "rmse", "clean" = "RMSE", "fmt" = 3),
list("raw" = "FE: canton_dpa", "clean" = "Canton fixed effects", "fmt" = 0),
list("raw" = "FE: interview_date", "clean" = "Interview date fixed effects", "fmt" = 0)
)
# Descriptive statistics --------------------------------------------------
## Normal descriptive statistics --------------------------------------------------
# Normal descriptive statistics for the merged dataset
df_descriptive <-
df %>%
transmute(`Presidential approval` = approves_president,
`Daily minimum temperature (C)` = min_temperature,
`Daily maximum temperature (C)` = max_temperature,
`Daily average temperature (C)` = avg_temperature,
`Daily precipitation (mm)` = precipitation,
`Female` = sex,
`Age (years)` = age,
`Rural status` = urban_rural,
`Education` = education,
`Labour market status` = labour_market,
`Worse perception of personal economy` = personal_econ_situation,
`Worse perception of country economy` = country_econ_situation,
`Ideology score (0-10)` = ideology,
`Support of democracy` = democracy_support,
`Perception of corruption` = corruption_perception,
`Tolerance to bribes` = corruption_tolerance,
`Political pride score` = political_pride,
`Trust in police score (0-7)` = confidence_police,
`Trust in local government score (0-7)` = confidence_local_gov,
)
notes_descriptive <- list(
"Note: Descriptive statistics for variables used in the empirical analysis. For categorical variables, the percent of observations in the category out of the total sample is presented. For numerical (either ordinal or continuous) variables, the mean, standard deviation, minimum and maximum are presented. For both, the number of observations and the percentage of missing values."
)
datasummary((Education + Female + `Labour market status` + `Worse perception of personal economy` + `Worse perception of country economy` + `Perception of corruption` + `Tolerance to bribes` + All(df_descriptive)) ~ ((N) + Percent() + (`Missing (%)` = PercentMissing) + Mean + (`Std. dev.` = SD) + Min + Median + Max + Percent()),
data = df_descriptive,
fmt = 2,
output = "data/output/descriptive_statistics.md",
booktabs = TRUE,
title = "Descriptive statistics for the matched AB data and weather variables",
threeparttable = TRUE,
notes = notes_descriptive)
# Baseline models ---------------------------------------------------------
# Simple Model 1: Min temperature
simple_model1 <-
feglm(approves_president ~ min_temperature,
fixef = c("canton_dpa", "interview_date"),
data = full_df,
family = binomial(link = "logit"),
cluster = ~ canton_dpa)
# Simple Model 2: Max temperature
simple_model2 <-
feglm(approves_president ~ max_temperature,
fixef = c("canton_dpa", "interview_date"),
data = full_df,
family = binomial(link = "logit"),
cluster = ~ canton_dpa)
# Simple Model 3: Average temperature
simple_model3 <-
feglm(approves_president ~ avg_temperature,
fixef = c("canton_dpa", "interview_date"),
data = full_df,
family = binomial(link = "logit"),
cluster = ~ canton_dpa)
# Simple Model 4: Min and Max temperature, with precipitation
simple_model4 <-
feglm(approves_president ~ min_temperature + max_temperature + precipitation,
fixef = c("canton_dpa", "interview_date"),
data = full_df,
family = binomial(link = "logit"),
cluster = ~ canton_dpa)
# List of baseline models
simple_models <- list(simple_model1, simple_model2, simple_model3, simple_model4)
# Average marginal effects for the baseline models
apes_baseline <- lapply(simple_models, avg_slopes, type = "response")
# Define coefficients mapping
coefficients_baseline_models <- c(
"min_temperature" = "Min. temperature (\u00B0C)",
"max_temperature" = "Max. temperature (\u00B0C)",
"avg_temperature" = "Avg. temperature (\u00B0C)",
"precipitation" = "Precipitation (mm)")
# Notes for logit coefficients table
notes_baseline_models <- list(
"Baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"***p<0.01, **p<0.05, *p<0.1."
)
# Modelsummary table of coefficients (for display)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "default",
estimate = "{estimate}{stars}",
booktabs = TRUE,
align = "lrrrr",
threeparttable = TRUE,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
# Modelsummary table of coefficients (to markdown file)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = TRUE,
align = "lrrrr",
threeparttable = TRUE,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
`
# Notes for marginal effects table
notes_baseline_models_ame <- list(
"Average partial effects for baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"***p<0.01, **p<0.05, *p<0.1.")
# Modelsummary table of marginal effects (to markdown file)
modelsummary(apes_baseline,
output = "data/output/marginal_effects_baseline.md",
coef_map = coefficients_baseline_models,
stars = stars,
booktabs = TRUE,
align = "lrrrr",
escape = T,
estimate = "{estimate}{stars}",
title = "Average marginal effects for baseline models",
threeparttable = TRUE,
notes = notes_baseline_models_ame,
gof_map = gf_map)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = T,
align = "lrrrr",
escape = T,
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = T,
align = "lrrrr",
escape = T,
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
source("~/GitHub/pol837-paper/scripts/r/tables_and_coefplots.R", echo=TRUE)
source("~/GitHub/pol837-paper/scripts/r/tables_and_coefplots.R", echo=TRUE)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = T,
align = "lrrrr",
escape = F,
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = T,
align = "lrrrr",
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
modelsummary(apes_baseline,
output = "data/output/marginal_effects_baseline.md",
coef_map = coefficients_baseline_models,
stars = stars,
booktabs = TRUE,
align = "lrrrr",
estimate = "{estimate}{stars}",
title = "Average marginal effects for baseline models",
threeparttable = TRUE,
notes = notes_baseline_models_ame,
gof_map = gf_map)
notes_baseline_models <- list(
"Baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"\*\*\*p<0.01, \*\*p<0.05, \*p<0.1."
notes_baseline_models <- list(
"Baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"\*\*\*p<0.01, \*\*p<0.05, \*p<0.1."
notes_baseline_models <- list(
"Baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"`***`p<0.01, `**`p<0.05, `*`p<0.1."
)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = T,
align = "lrrrr",
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
booktabs = T,
align = "lrrrr",
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
notes_baseline_models <- list(
"Baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"`***` p < 0.01, `**`p < 0.05, `*`p < 0.1."
)
# Modelsummary table of coefficients (to markdown file)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
booktabs = T,
align = "lrrrr",
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
notes_baseline_models <- list(
"Baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"`***`p < 0.01, `**`p < 0.05, `*` p < 0.1."
)
# Modelsummary table of coefficients (to markdown file)
modelsummary(simple_models,
coef_map = coefficients_baseline_models,
stars = stars,
output = "data/output/logit_coefficients_baseline.md",
estimate = "{estimate}{stars}",
booktabs = T,
align = "lrrrr",
threeparttable = T,
title = "Logit coefficients for baseline specifications",
vcov = ~ canton_dpa,
notes = notes_baseline_models,
gof_map = gf_map)
notes_baseline_models_ame <- list(
"Average partial effects for baseline models explaining presidential approval through daily weather variables and canton and interview date fixed effects. Standard errors shown in parentheses are clustered by canton.",
"`***` p < 0.01, `**` p < 0.05, `*` p < 0.1.")
# Modelsummary table of marginal effects (to markdown file)
modelsummary(apes_baseline,
output = "data/output/marginal_effects_baseline.md",
coef_map = coefficients_baseline_models,
stars = stars,
booktabs = TRUE,
align = "lrrrr",
estimate = "{estimate}{stars}",
title = "Average marginal effects for baseline models",
threeparttable = TRUE,
notes = notes_baseline_models_ame,
gof_map = gf_map)
notes_control_models <- list(
"Models explaining presidential approval through daily weather variables and controls. Standard errors shown in parentheses are clustered by canton.",
"`***` p < 0.01, `**` p < 0.05, `*` p < 0.1."
)
# Modelsummary table of coefficients (for display)
modelsummary(models_controls,
gof_map = gf_map,
coef_map = coefficients_controls,
stars = stars,
estimate = "{estimate}{stars}",
booktabs = TRUE,
align = "lrrrr",
threeparttable = TRUE,
title = "Logit coefficients for specifications with controls",
notes = notes_control_models,
output = "default",
threeparttable = TRUE,
longtable = T)
# Modelsummary table of coefficients (to markdown file)
modelsummary(models_controls,
gof_map = gf_map,
coef_map = coefficients_controls,
stars = stars,
estimate = "{estimate}{stars}",
booktabs = TRUE,
align = "lrrrr",
threeparttable = TRUE,
title = "Logit coefficients for specifications with controls",
vcov = ~ canton_dpa,
notes = notes_control_models,
output = "data/output/logit_coefficients_controls.md")
notes_control_models_apes <- list(
"Average partial effects for models explaining presidential approval through daily weather variables, canton and interview date fixed effects, and political behaviour controls. Standard errors shown in parentheses are clustered by canton.",
"`***` p < 0.01, `**` p < 0.05, `* p < 0.1."
)
# Modelsummary table of marginal effects (for display)
modelsummary(apes_controls,
output = "default",
coef_map = coefficients_controls_apes,
stars = stars,
align = "lrrrr",
shape = term:contrast + statistic ~ model,
estimate = "{estimate}{stars}",
title = "Average marginal effects for models with controls",
threeparttable = TRUE,
booktabs = TRUE,
notes = notes_control_models_apes,
gof_map = gf_map)
notes_control_models_apes <- list(
"Average partial effects for models explaining presidential approval through daily weather variables, canton and interview date fixed effects, and political behaviour controls. Standard errors shown in parentheses are clustered by canton.",
"`***` p < 0.01, `**` p < 0.05, `* p < 0.1."
)
# Coefficient mapping for marginal effects table
coefficients_controls_apes <- c(
"min_temperature dY/dX" = "Min. temperature (\u00B0C)",
"max_temperature dY/dX" = "Max. temperature (\u00B0C)",
"avg_temperature dY/dX" = "Avg. temperature (\u00B0C)",
"precipitation dY/dX" = "Precipitation (mm)",
"sex Female - Male" = "Female",
"age dY/dX" = "Age",
"ethnicity Blanca - Mestizo" = "White (ref. Mestizo)",
"ethnicity Indígena - Mestizo" = "Indigenous",
"ethnicity Mulata - Mestizo" = "Mulatto",
"ethnicity Negra - Mestizo" = "Black",
"ethnicity Otra - Mestizo" = "Other",
"civil_status Married/Common Law - Single" = "Married (ref. Single)",
"civil_status Divorced/Separated/Widowed - Single" = "Divorced/Separated/Widowed",
"urban_rural Rural - Urban" = "Rural area ",
"education Primary - None" = "Primary education (ref. No education)",
"education Secondary - None" = "Secondary education",
"education Superior - None" = "Higher education",
"labour_market Not in Labour Force - Employed" = "Not in Labour Force",
"labour_market Unemployed - Employed" = "Unemployed",
"personal_econ_situation Worse - Better or Same" = "Perceived worse personal economy",
"country_econ_situation Worse - Better or Same" = "Perceived worse country economy",
"incumbent_vote Incumbent - Did not vote for incumbent" = "Voted for incumbent",
"ideology dY/dX" = "Ideology score (0-10)",
"internal_efficacy dY/dX" = "Internal efficacy score (0-7)",
"external_efficacy dY/dX" = "External efficacy score (0-7)",
"democracy_support Supports - Does Not Support" = "Supports democracy",
"political_pride dY/dX" = "Political pride score (0-7)",
"corruption_perception Corrupt - Not Corrupt" = "Perceives corruption",
"corruption_tolerance Tolerant - Not Tolerant" = "Tolerates bribes",
"confidence_police dY/dX" = "Trust in police score (0-7)",
"confidence_local_gov dY/dX" = "Trust in local gov. (0-7)"
)
# Modelsummary table of marginal effects (for display)
modelsummary(apes_controls,
output = "default",
coef_map = coefficients_controls_apes,
stars = stars,
align = "lrrrr",
shape = term:contrast + statistic ~ model,
estimate = "{estimate}{stars}",
title = "Average marginal effects for models with controls",
threeparttable = TRUE,
booktabs = TRUE,
notes = notes_control_models_apes,
gof_map = gf_map)
modelsummary(apes_controls,
output = "data/output/logit_marginal_effects_controls.md",
coef_map = coefficients_controls_apes,
stars = stars,
align = "lrrrr",
shape = term:contrast + statistic ~ model,
estimate = "{estimate}{stars}",
title = "Average marginal effects for models with controls",
threeparttable = TRUE,
booktabs = TRUE,
notes = notes_control_models_apes,
gof_map = gf_map)
